@page
@model BrickVault.Pages.CartModel
@{
}

<h2>Your cart</h2>

<table class="table table-bordered table-striped">
    <thead>
        <tr>
            <th>Product Name</th>
            <th>Quantity</th>
            <th class="text-right">Price</th>
            <th class="text-right">Subtotal</th>
            <th></th>
        </tr>
    </thead>

    <tbody>
        @foreach (var l in Model.Cart?.Lines ?? Enumerable.Empty<Cart.CartLine>())
        {
            <tr>
                <td class="text-left">@l.Product.Name</td>
                <td class="text-center">@l.Quantity</td>
                <td class="text-right">@l.Price.ToString("c")</td>
                <td class="text-right">@((l.Price * l.Quantity).ToString("c"))</td>
                <td class="text-center">
                    <form asp-page-handler="Remove" method="post">
                        <input type="hidden" name="ProductId" value="@l.Product.ProductId" />
                        <input typw="hidden" name="returnUrl" value="@Model?.ReturnUrl" />
                        <button type="submit" class="btn btn-sm btn-danger">Remove</button>
                    </form>"
                </td>
            </tr>
        }
    </tbody>

    <tfoot>
        <tr>
            <td colspan="3" class="text-right">Total</td>
            <td class="text-right">@Model.Cart?.CalculateTotal().ToString("c")</td>
        </tr>
    </tfoot>
</table>

@* add button functionality *@
<div class="row">
    <div class="col-6">
        <a class="btn btn-primary" href="@Url.Action("Products", "Home")">Keep Shopping</a>
    </div>
    <div class="col-6 text-end">
        <button class="btn btn-success">Proceed to Checkout</button>
    </div>
</div>